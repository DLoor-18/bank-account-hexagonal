{"hash":"2d3ca88539a046a998b8722fe33b170400be9b388edb8f924b5f3ac36ac4cf9d","fesm2022":[{"exports":["usersRoutes"],"facadeModuleId":"/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/users.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/domain/state/state.factory.mjs","/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/domain/state/users.state.mjs","/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/domain/state/index.mjs","/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/infrastructure/services/auth-user.service.mjs","/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/application/auth-user.usecase.mjs","/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/infrastructure/ui/forms/auth/auth.component.mjs","/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/infrastructure/ui/containers/auth-user/auth-user.component.mjs","/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/infrastructure/ui/routes/users.routes.mjs","/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/public-api.mjs","/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/users.mjs"],"name":"users","type":"chunk","dynamicImports":[],"fileName":"users.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["*","Injectable","inject","input","output","Component"],"@angular/forms":["FormsModule","*","ReactiveFormsModule","FormBuilder","Validators"],"@angular/router":["Router"],"rxjs":["BehaviorSubject","Subscription","tap","of","switchMap"],"@angular/common/http":["HttpClient"],"@angular/common":["AsyncPipe","JsonPipe"]},"imports":["@angular/core","@angular/forms","@angular/router","rxjs","@angular/common/http","@angular/common"],"modules":{"/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/domain/state/state.factory.mjs":{"code":"class StateFactory {\n    state(subject$) {\n        return {\n            $: () => subject$.asObservable(),\n            snapshot: () => this.immutabilize(subject$.getValue()),\n            set: (value) => subject$.next(this.immutabilize(value))\n        };\n    }\n    immutabilize(value) {\n        return JSON.parse(JSON.stringify(value));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: StateFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: StateFactory, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: StateFactory, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });","originalLength":2730,"removedExports":[],"renderedExports":["StateFactory"],"renderedLength":899},"/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/domain/state/users.state.mjs":{"code":"class UsersState {\n    _factory = inject(StateFactory);\n    //#region Subjects\n    user$ = new BehaviorSubject(null);\n    auth$ = new BehaviorSubject(null);\n    //#endregion\n    store() {\n        return {\n            user: this._factory.state(this.user$),\n            auth: this._factory.state(this.auth$)\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: UsersState, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: UsersState, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: UsersState, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });","originalLength":3066,"removedExports":[],"renderedExports":["UsersState"],"renderedLength":875},"/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/domain/state/index.mjs":{"code":"class State {\n    _users = inject(UsersState);\n    get users() {\n        return this._users.store();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: State, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: State, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: State, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });","originalLength":1839,"removedExports":[],"renderedExports":["State"],"renderedLength":644},"/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/infrastructure/services/auth-user.service.mjs":{"code":"class AuthUserService {\n    http = inject(HttpClient);\n    urlBase = 'http://localhost:8080/api';\n    authUser(auth) {\n        return this.http.post(`${this.urlBase}/auth/login`, auth);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthUserService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthUserService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthUserService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });","originalLength":2545,"removedExports":[],"renderedExports":["AuthUserService"],"renderedLength":759},"/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/application/auth-user.usecase.mjs":{"code":"class AuthUserUseCase {\n    _service = inject(AuthUserService);\n    _state = inject(State);\n    subscriptions;\n    //#region Observables\n    authUser$() {\n        return this._state.users.auth.$();\n    }\n    //#endregion\n    //#region Public Methods\n    initSubscriptions() {\n        this.subscriptions = new Subscription();\n    }\n    destroySubscriptions() {\n        this.subscriptions.unsubscribe();\n    }\n    execute(user) {\n        this.subscriptions.add(this._service.authUser(user)\n            .pipe(tap(result => {\n            if (result.token) {\n                this._state.users.auth.set(result);\n                // const users = this._state.users.user.snapshot();\n                // this._state.users.user.set([...users, result])\n            }\n        }))\n            .subscribe());\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthUserUseCase, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthUserUseCase, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthUserUseCase, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });","originalLength":5192,"removedExports":[],"renderedExports":["AuthUserUseCase"],"renderedLength":1366},"/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/infrastructure/ui/forms/auth/auth.component.mjs":{"code":"class AuthComponent {\n    authForm = input();\n    submit = output();\n    onSubmit() {\n        this.authForm().markAllAsTouched();\n        if (this.authForm().valid) {\n            this.submit.emit(this.authForm());\n        }\n        else {\n            console.log('error');\n            // this.toastService.emitToast(\"Error\", \"Inconsistency in fields\", \"error\", true);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"19.1.3\", type: AuthComponent, isStandalone: true, selector: \"lib-auth\", inputs: { authForm: { classPropertyName: \"authForm\", publicName: \"authForm\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { submit: \"submit\" }, ngImport: i0, template: \"<section class=\\\"login-container\\\">\\n    <form action=\\\"\\\" [formGroup]=\\\"authForm()\\\" class=\\\"login-container__form\\\">\\n        <ul class=\\\"login-container__nav\\\">\\n            <li class=\\\"login-container__nav__item login-container__nav__item--active\\\">\\n                <a href=\\\"#\\\" tabindex=\\\"-1\\\">Sign In</a>\\n            </li>\\n        </ul>\\n        <label for=\\\"login-input-user\\\" class=\\\"login-container__form__label\\\" aria-label=\\\"\\\">\\n            Username\\n        </label>\\n        <input id=\\\"login-input-user\\\" formControlName=\\\"email\\\" name=\\\"email\\\" class=\\\"login-container__form__input\\\"\\n            type=\\\"text\\\" />\\n        <label for=\\\"login-input-password\\\" class=\\\"login-container__form__label\\\">\\n            Password\\n        </label>\\n        <input id=\\\"login-input-password\\\" formControlName=\\\"password\\\" name=\\\"password\\\" class=\\\"login-container__form__input\\\"\\n            type=\\\"password\\\" />\\n        <label for=\\\"login-sign-up\\\" class=\\\"login-container__form__label--checkbox\\\">\\n            <input id=\\\"login-sign-up\\\" type=\\\"checkbox\\\" class=\\\"login-container__form__input--checkbox\\\" />\\n            Keep me Signed in\\n        </label>\\n        <button class=\\\"login-container__form__submit\\\" (click)=\\\"onSubmit()\\\">Sign in</button>\\n    </form>\\n    <a href=\\\"#\\\" class=\\\"login-container__copyright\\\">\\u00A9 2025 BankinApp</a>\\n</section>\", styles: [\"*{transition:.25s all ease}body{background-color:#e9e9e9;font-size:16px;line-height:1.25;letter-spacing:1px}.login-container{display:block;position:relative;z-index:0;margin:4rem auto 0;padding:5rem 4rem 0;width:100%;max-width:525px;min-height:680px;box-shadow:0 50px 70px -20px #000000d9}.login-container:after{content:\\\"\\\";display:inline-block;position:absolute;z-index:0;inset:0;background-image:radial-gradient(ellipse at left bottom,#16182f,#261448e6 59%,#111b4be6);box-shadow:0 -20px 150px -20px #00000080}.login-container__form{position:relative;z-index:1;padding-bottom:4.5rem;border-bottom:1px solid rgba(255,255,255,.25)}.login-container__nav{position:relative;padding:0;margin:0 0 6em 1rem}.login-container__nav__item+.login-container__nav__item{margin-left:2.25rem}.login-container__nav__item{list-style:none;display:inline-block}.login-container__nav__item a{position:relative;color:#ffffff80;text-decoration:none;text-transform:uppercase;font-weight:500;font-size:1.25rem;padding-bottom:.5rem;transition:.2s all ease}.login-container__nav__item--active a,.login-container__nav__itema:hover{color:#fff;transition:.15s all ease}.login-container__nav__item a:after{content:\\\"\\\";display:inline-block;height:10px;background-color:#fff;position:absolute;right:100%;bottom:-1px;left:0;border-radius:50%;transition:.15s all ease}.login-container__nav__item a:hover:after,.login-container__nav__item--active a:after{background-color:#1161ed;height:2px;right:0;bottom:2px;border-radius:0;transition:.2s all ease}.login-container__form__label{display:block;padding-left:1rem}.login-container__form__label,.login-container__form__label--checkbox{color:#ffffff80;text-transform:uppercase;font-size:.75rem;margin-bottom:1rem}.login-container__form__label--checkbox{display:inline-block;position:relative;padding-left:1.5rem;margin-top:2rem;margin-left:1rem;padding-top:2px;color:#fff;text-transform:inherit}.login-container__form__input{color:#fff;font-size:1.15rem;width:100%;padding:.5rem 1rem;border:2px solid transparent;outline:none;border-radius:1.5rem;background-color:#ffffff40;letter-spacing:1px}.login-container__form__input:hover,.login-container__form__input:focus{color:#fff;border:2px solid rgba(255,255,255,.5);background-color:transparent}.login-container__form__input+.login-container__form__label{margin-top:1.5rem}.login-container__form__input--checkbox{position:absolute;top:.1rem;left:0;margin:0}.login-container__form__input.ng-invalid.ng-touched{border-color:#8c0a18}.login-container__form__submit{color:#fff;font-size:1rem;font-family:Montserrat,sans-serif;text-transform:uppercase;letter-spacing:1px;margin-top:1rem;padding:.75rem;border-radius:2rem;display:block;width:100%;background-color:#1161edbf;border:none;cursor:pointer}.login-container__form__submit:hover{background-color:#1161ed}.login-container__copyright{display:block;margin-top:3rem;text-align:center;color:#ffffffbf;font-size:.75rem;text-decoration:none;position:relative;z-index:1}\\n\"], dependencies: [{ kind: \"ngmodule\", type: FormsModule }, { kind: \"directive\", type: i1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-auth', imports: [FormsModule, ReactiveFormsModule], template: \"<section class=\\\"login-container\\\">\\n    <form action=\\\"\\\" [formGroup]=\\\"authForm()\\\" class=\\\"login-container__form\\\">\\n        <ul class=\\\"login-container__nav\\\">\\n            <li class=\\\"login-container__nav__item login-container__nav__item--active\\\">\\n                <a href=\\\"#\\\" tabindex=\\\"-1\\\">Sign In</a>\\n            </li>\\n        </ul>\\n        <label for=\\\"login-input-user\\\" class=\\\"login-container__form__label\\\" aria-label=\\\"\\\">\\n            Username\\n        </label>\\n        <input id=\\\"login-input-user\\\" formControlName=\\\"email\\\" name=\\\"email\\\" class=\\\"login-container__form__input\\\"\\n            type=\\\"text\\\" />\\n        <label for=\\\"login-input-password\\\" class=\\\"login-container__form__label\\\">\\n            Password\\n        </label>\\n        <input id=\\\"login-input-password\\\" formControlName=\\\"password\\\" name=\\\"password\\\" class=\\\"login-container__form__input\\\"\\n            type=\\\"password\\\" />\\n        <label for=\\\"login-sign-up\\\" class=\\\"login-container__form__label--checkbox\\\">\\n            <input id=\\\"login-sign-up\\\" type=\\\"checkbox\\\" class=\\\"login-container__form__input--checkbox\\\" />\\n            Keep me Signed in\\n        </label>\\n        <button class=\\\"login-container__form__submit\\\" (click)=\\\"onSubmit()\\\">Sign in</button>\\n    </form>\\n    <a href=\\\"#\\\" class=\\\"login-container__copyright\\\">\\u00A9 2025 BankinApp</a>\\n</section>\", styles: [\"*{transition:.25s all ease}body{background-color:#e9e9e9;font-size:16px;line-height:1.25;letter-spacing:1px}.login-container{display:block;position:relative;z-index:0;margin:4rem auto 0;padding:5rem 4rem 0;width:100%;max-width:525px;min-height:680px;box-shadow:0 50px 70px -20px #000000d9}.login-container:after{content:\\\"\\\";display:inline-block;position:absolute;z-index:0;inset:0;background-image:radial-gradient(ellipse at left bottom,#16182f,#261448e6 59%,#111b4be6);box-shadow:0 -20px 150px -20px #00000080}.login-container__form{position:relative;z-index:1;padding-bottom:4.5rem;border-bottom:1px solid rgba(255,255,255,.25)}.login-container__nav{position:relative;padding:0;margin:0 0 6em 1rem}.login-container__nav__item+.login-container__nav__item{margin-left:2.25rem}.login-container__nav__item{list-style:none;display:inline-block}.login-container__nav__item a{position:relative;color:#ffffff80;text-decoration:none;text-transform:uppercase;font-weight:500;font-size:1.25rem;padding-bottom:.5rem;transition:.2s all ease}.login-container__nav__item--active a,.login-container__nav__itema:hover{color:#fff;transition:.15s all ease}.login-container__nav__item a:after{content:\\\"\\\";display:inline-block;height:10px;background-color:#fff;position:absolute;right:100%;bottom:-1px;left:0;border-radius:50%;transition:.15s all ease}.login-container__nav__item a:hover:after,.login-container__nav__item--active a:after{background-color:#1161ed;height:2px;right:0;bottom:2px;border-radius:0;transition:.2s all ease}.login-container__form__label{display:block;padding-left:1rem}.login-container__form__label,.login-container__form__label--checkbox{color:#ffffff80;text-transform:uppercase;font-size:.75rem;margin-bottom:1rem}.login-container__form__label--checkbox{display:inline-block;position:relative;padding-left:1.5rem;margin-top:2rem;margin-left:1rem;padding-top:2px;color:#fff;text-transform:inherit}.login-container__form__input{color:#fff;font-size:1.15rem;width:100%;padding:.5rem 1rem;border:2px solid transparent;outline:none;border-radius:1.5rem;background-color:#ffffff40;letter-spacing:1px}.login-container__form__input:hover,.login-container__form__input:focus{color:#fff;border:2px solid rgba(255,255,255,.5);background-color:transparent}.login-container__form__input+.login-container__form__label{margin-top:1.5rem}.login-container__form__input--checkbox{position:absolute;top:.1rem;left:0;margin:0}.login-container__form__input.ng-invalid.ng-touched{border-color:#8c0a18}.login-container__form__submit{color:#fff;font-size:1rem;font-family:Montserrat,sans-serif;text-transform:uppercase;letter-spacing:1px;margin-top:1rem;padding:.75rem;border-radius:2rem;display:block;width:100%;background-color:#1161edbf;border:none;cursor:pointer}.login-container__form__submit:hover{background-color:#1161ed}.login-container__copyright{display:block;margin-top:3rem;text-align:center;color:#ffffffbf;font-size:.75rem;text-decoration:none;position:relative;z-index:1}\\n\"] }]\n        }] });","originalLength":15188,"removedExports":[],"renderedExports":["AuthComponent"],"renderedLength":10950},"/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/infrastructure/ui/containers/auth-user/auth-user.component.mjs":{"code":"class AuthUserComponent {\n    _useCase = inject(AuthUserUseCase);\n    auth$;\n    router = inject(Router);\n    fb = inject(FormBuilder);\n    authForm = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required]]\n    });\n    ngOnInit() {\n        this._useCase.initSubscriptions();\n        this.auth$ = this._useCase.authUser$();\n    }\n    ngOnDestroy() {\n        this._useCase.destroySubscriptions();\n    }\n    auth() {\n        this.authForm.markAllAsTouched();\n        if (this.authForm.valid) {\n            this.validateCredentials();\n        }\n        else {\n            // this.toastService.emitToast(\"Error\", \"Inconsistency in fields\", \"error\", true);\n        }\n    }\n    get getEmail() {\n        return this.authForm.value.email ?? '';\n    }\n    validateCredentials() {\n        // this.loaderService.show(true);\n        of(this._useCase.execute(this.authForm.getRawValue())).pipe(switchMap(() => this.auth$), tap(response => {\n            if (response?.token) {\n                localStorage.setItem('email', this.getEmail);\n                return true;\n            }\n            else {\n                return false;\n            }\n        })).subscribe();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthUserComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.1.3\", type: AuthUserComponent, isStandalone: true, selector: \"lib-auth-user\", ngImport: i0, template: \"<lib-auth [authForm]=\\\"authForm\\\" (submit)=\\\"validateCredentials()\\\"></lib-auth>\\n{{auth$ | async | json}}\", dependencies: [{ kind: \"component\", type: AuthComponent, selector: \"lib-auth\", inputs: [\"authForm\"], outputs: [\"submit\"] }, { kind: \"pipe\", type: AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: JsonPipe, name: \"json\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthUserComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-auth-user', imports: [AuthComponent, AsyncPipe, JsonPipe], template: \"<lib-auth [authForm]=\\\"authForm\\\" (submit)=\\\"validateCredentials()\\\"></lib-auth>\\n{{auth$ | async | json}}\" }]\n        }] });","originalLength":8304,"removedExports":[],"renderedExports":["AuthUserComponent"],"renderedLength":2306},"/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/infrastructure/ui/routes/users.routes.mjs":{"code":"const usersRoutes = [\n    {\n        path: 'login',\n        component: AuthUserComponent\n    }\n];","originalLength":935,"removedExports":[],"renderedExports":["usersRoutes"],"renderedLength":96},"/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/public-api.mjs":{"code":"/*\n * Public API Surface of users\n */","originalLength":529,"removedExports":[],"renderedExports":[],"renderedLength":37},"/home/lt1112/CURSOS FRONTEND/bank-account-hexagonal/dist/users/esm2022/users.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":476,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { Injectable, inject, input, output, Component } from '@angular/core';\nimport * as i1 from '@angular/forms';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subscription, tap, of, switchMap } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { AsyncPipe, JsonPipe } from '@angular/common';\n\nclass StateFactory {\n    state(subject$) {\n        return {\n            $: () => subject$.asObservable(),\n            snapshot: () => this.immutabilize(subject$.getValue()),\n            set: (value) => subject$.next(this.immutabilize(value))\n        };\n    }\n    immutabilize(value) {\n        return JSON.parse(JSON.stringify(value));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: StateFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: StateFactory, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: StateFactory, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass UsersState {\n    _factory = inject(StateFactory);\n    //#region Subjects\n    user$ = new BehaviorSubject(null);\n    auth$ = new BehaviorSubject(null);\n    //#endregion\n    store() {\n        return {\n            user: this._factory.state(this.user$),\n            auth: this._factory.state(this.auth$)\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: UsersState, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: UsersState, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: UsersState, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass State {\n    _users = inject(UsersState);\n    get users() {\n        return this._users.store();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: State, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: State, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: State, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass AuthUserService {\n    http = inject(HttpClient);\n    urlBase = 'http://localhost:8080/api';\n    authUser(auth) {\n        return this.http.post(`${this.urlBase}/auth/login`, auth);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthUserService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthUserService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthUserService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass AuthUserUseCase {\n    _service = inject(AuthUserService);\n    _state = inject(State);\n    subscriptions;\n    //#region Observables\n    authUser$() {\n        return this._state.users.auth.$();\n    }\n    //#endregion\n    //#region Public Methods\n    initSubscriptions() {\n        this.subscriptions = new Subscription();\n    }\n    destroySubscriptions() {\n        this.subscriptions.unsubscribe();\n    }\n    execute(user) {\n        this.subscriptions.add(this._service.authUser(user)\n            .pipe(tap(result => {\n            if (result.token) {\n                this._state.users.auth.set(result);\n                // const users = this._state.users.user.snapshot();\n                // this._state.users.user.set([...users, result])\n            }\n        }))\n            .subscribe());\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthUserUseCase, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthUserUseCase, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthUserUseCase, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass AuthComponent {\n    authForm = input();\n    submit = output();\n    onSubmit() {\n        this.authForm().markAllAsTouched();\n        if (this.authForm().valid) {\n            this.submit.emit(this.authForm());\n        }\n        else {\n            console.log('error');\n            // this.toastService.emitToast(\"Error\", \"Inconsistency in fields\", \"error\", true);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"19.1.3\", type: AuthComponent, isStandalone: true, selector: \"lib-auth\", inputs: { authForm: { classPropertyName: \"authForm\", publicName: \"authForm\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { submit: \"submit\" }, ngImport: i0, template: \"<section class=\\\"login-container\\\">\\n    <form action=\\\"\\\" [formGroup]=\\\"authForm()\\\" class=\\\"login-container__form\\\">\\n        <ul class=\\\"login-container__nav\\\">\\n            <li class=\\\"login-container__nav__item login-container__nav__item--active\\\">\\n                <a href=\\\"#\\\" tabindex=\\\"-1\\\">Sign In</a>\\n            </li>\\n        </ul>\\n        <label for=\\\"login-input-user\\\" class=\\\"login-container__form__label\\\" aria-label=\\\"\\\">\\n            Username\\n        </label>\\n        <input id=\\\"login-input-user\\\" formControlName=\\\"email\\\" name=\\\"email\\\" class=\\\"login-container__form__input\\\"\\n            type=\\\"text\\\" />\\n        <label for=\\\"login-input-password\\\" class=\\\"login-container__form__label\\\">\\n            Password\\n        </label>\\n        <input id=\\\"login-input-password\\\" formControlName=\\\"password\\\" name=\\\"password\\\" class=\\\"login-container__form__input\\\"\\n            type=\\\"password\\\" />\\n        <label for=\\\"login-sign-up\\\" class=\\\"login-container__form__label--checkbox\\\">\\n            <input id=\\\"login-sign-up\\\" type=\\\"checkbox\\\" class=\\\"login-container__form__input--checkbox\\\" />\\n            Keep me Signed in\\n        </label>\\n        <button class=\\\"login-container__form__submit\\\" (click)=\\\"onSubmit()\\\">Sign in</button>\\n    </form>\\n    <a href=\\\"#\\\" class=\\\"login-container__copyright\\\">\\u00A9 2025 BankinApp</a>\\n</section>\", styles: [\"*{transition:.25s all ease}body{background-color:#e9e9e9;font-size:16px;line-height:1.25;letter-spacing:1px}.login-container{display:block;position:relative;z-index:0;margin:4rem auto 0;padding:5rem 4rem 0;width:100%;max-width:525px;min-height:680px;box-shadow:0 50px 70px -20px #000000d9}.login-container:after{content:\\\"\\\";display:inline-block;position:absolute;z-index:0;inset:0;background-image:radial-gradient(ellipse at left bottom,#16182f,#261448e6 59%,#111b4be6);box-shadow:0 -20px 150px -20px #00000080}.login-container__form{position:relative;z-index:1;padding-bottom:4.5rem;border-bottom:1px solid rgba(255,255,255,.25)}.login-container__nav{position:relative;padding:0;margin:0 0 6em 1rem}.login-container__nav__item+.login-container__nav__item{margin-left:2.25rem}.login-container__nav__item{list-style:none;display:inline-block}.login-container__nav__item a{position:relative;color:#ffffff80;text-decoration:none;text-transform:uppercase;font-weight:500;font-size:1.25rem;padding-bottom:.5rem;transition:.2s all ease}.login-container__nav__item--active a,.login-container__nav__itema:hover{color:#fff;transition:.15s all ease}.login-container__nav__item a:after{content:\\\"\\\";display:inline-block;height:10px;background-color:#fff;position:absolute;right:100%;bottom:-1px;left:0;border-radius:50%;transition:.15s all ease}.login-container__nav__item a:hover:after,.login-container__nav__item--active a:after{background-color:#1161ed;height:2px;right:0;bottom:2px;border-radius:0;transition:.2s all ease}.login-container__form__label{display:block;padding-left:1rem}.login-container__form__label,.login-container__form__label--checkbox{color:#ffffff80;text-transform:uppercase;font-size:.75rem;margin-bottom:1rem}.login-container__form__label--checkbox{display:inline-block;position:relative;padding-left:1.5rem;margin-top:2rem;margin-left:1rem;padding-top:2px;color:#fff;text-transform:inherit}.login-container__form__input{color:#fff;font-size:1.15rem;width:100%;padding:.5rem 1rem;border:2px solid transparent;outline:none;border-radius:1.5rem;background-color:#ffffff40;letter-spacing:1px}.login-container__form__input:hover,.login-container__form__input:focus{color:#fff;border:2px solid rgba(255,255,255,.5);background-color:transparent}.login-container__form__input+.login-container__form__label{margin-top:1.5rem}.login-container__form__input--checkbox{position:absolute;top:.1rem;left:0;margin:0}.login-container__form__input.ng-invalid.ng-touched{border-color:#8c0a18}.login-container__form__submit{color:#fff;font-size:1rem;font-family:Montserrat,sans-serif;text-transform:uppercase;letter-spacing:1px;margin-top:1rem;padding:.75rem;border-radius:2rem;display:block;width:100%;background-color:#1161edbf;border:none;cursor:pointer}.login-container__form__submit:hover{background-color:#1161ed}.login-container__copyright{display:block;margin-top:3rem;text-align:center;color:#ffffffbf;font-size:.75rem;text-decoration:none;position:relative;z-index:1}\\n\"], dependencies: [{ kind: \"ngmodule\", type: FormsModule }, { kind: \"directive\", type: i1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-auth', imports: [FormsModule, ReactiveFormsModule], template: \"<section class=\\\"login-container\\\">\\n    <form action=\\\"\\\" [formGroup]=\\\"authForm()\\\" class=\\\"login-container__form\\\">\\n        <ul class=\\\"login-container__nav\\\">\\n            <li class=\\\"login-container__nav__item login-container__nav__item--active\\\">\\n                <a href=\\\"#\\\" tabindex=\\\"-1\\\">Sign In</a>\\n            </li>\\n        </ul>\\n        <label for=\\\"login-input-user\\\" class=\\\"login-container__form__label\\\" aria-label=\\\"\\\">\\n            Username\\n        </label>\\n        <input id=\\\"login-input-user\\\" formControlName=\\\"email\\\" name=\\\"email\\\" class=\\\"login-container__form__input\\\"\\n            type=\\\"text\\\" />\\n        <label for=\\\"login-input-password\\\" class=\\\"login-container__form__label\\\">\\n            Password\\n        </label>\\n        <input id=\\\"login-input-password\\\" formControlName=\\\"password\\\" name=\\\"password\\\" class=\\\"login-container__form__input\\\"\\n            type=\\\"password\\\" />\\n        <label for=\\\"login-sign-up\\\" class=\\\"login-container__form__label--checkbox\\\">\\n            <input id=\\\"login-sign-up\\\" type=\\\"checkbox\\\" class=\\\"login-container__form__input--checkbox\\\" />\\n            Keep me Signed in\\n        </label>\\n        <button class=\\\"login-container__form__submit\\\" (click)=\\\"onSubmit()\\\">Sign in</button>\\n    </form>\\n    <a href=\\\"#\\\" class=\\\"login-container__copyright\\\">\\u00A9 2025 BankinApp</a>\\n</section>\", styles: [\"*{transition:.25s all ease}body{background-color:#e9e9e9;font-size:16px;line-height:1.25;letter-spacing:1px}.login-container{display:block;position:relative;z-index:0;margin:4rem auto 0;padding:5rem 4rem 0;width:100%;max-width:525px;min-height:680px;box-shadow:0 50px 70px -20px #000000d9}.login-container:after{content:\\\"\\\";display:inline-block;position:absolute;z-index:0;inset:0;background-image:radial-gradient(ellipse at left bottom,#16182f,#261448e6 59%,#111b4be6);box-shadow:0 -20px 150px -20px #00000080}.login-container__form{position:relative;z-index:1;padding-bottom:4.5rem;border-bottom:1px solid rgba(255,255,255,.25)}.login-container__nav{position:relative;padding:0;margin:0 0 6em 1rem}.login-container__nav__item+.login-container__nav__item{margin-left:2.25rem}.login-container__nav__item{list-style:none;display:inline-block}.login-container__nav__item a{position:relative;color:#ffffff80;text-decoration:none;text-transform:uppercase;font-weight:500;font-size:1.25rem;padding-bottom:.5rem;transition:.2s all ease}.login-container__nav__item--active a,.login-container__nav__itema:hover{color:#fff;transition:.15s all ease}.login-container__nav__item a:after{content:\\\"\\\";display:inline-block;height:10px;background-color:#fff;position:absolute;right:100%;bottom:-1px;left:0;border-radius:50%;transition:.15s all ease}.login-container__nav__item a:hover:after,.login-container__nav__item--active a:after{background-color:#1161ed;height:2px;right:0;bottom:2px;border-radius:0;transition:.2s all ease}.login-container__form__label{display:block;padding-left:1rem}.login-container__form__label,.login-container__form__label--checkbox{color:#ffffff80;text-transform:uppercase;font-size:.75rem;margin-bottom:1rem}.login-container__form__label--checkbox{display:inline-block;position:relative;padding-left:1.5rem;margin-top:2rem;margin-left:1rem;padding-top:2px;color:#fff;text-transform:inherit}.login-container__form__input{color:#fff;font-size:1.15rem;width:100%;padding:.5rem 1rem;border:2px solid transparent;outline:none;border-radius:1.5rem;background-color:#ffffff40;letter-spacing:1px}.login-container__form__input:hover,.login-container__form__input:focus{color:#fff;border:2px solid rgba(255,255,255,.5);background-color:transparent}.login-container__form__input+.login-container__form__label{margin-top:1.5rem}.login-container__form__input--checkbox{position:absolute;top:.1rem;left:0;margin:0}.login-container__form__input.ng-invalid.ng-touched{border-color:#8c0a18}.login-container__form__submit{color:#fff;font-size:1rem;font-family:Montserrat,sans-serif;text-transform:uppercase;letter-spacing:1px;margin-top:1rem;padding:.75rem;border-radius:2rem;display:block;width:100%;background-color:#1161edbf;border:none;cursor:pointer}.login-container__form__submit:hover{background-color:#1161ed}.login-container__copyright{display:block;margin-top:3rem;text-align:center;color:#ffffffbf;font-size:.75rem;text-decoration:none;position:relative;z-index:1}\\n\"] }]\n        }] });\n\nclass AuthUserComponent {\n    _useCase = inject(AuthUserUseCase);\n    auth$;\n    router = inject(Router);\n    fb = inject(FormBuilder);\n    authForm = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required]]\n    });\n    ngOnInit() {\n        this._useCase.initSubscriptions();\n        this.auth$ = this._useCase.authUser$();\n    }\n    ngOnDestroy() {\n        this._useCase.destroySubscriptions();\n    }\n    auth() {\n        this.authForm.markAllAsTouched();\n        if (this.authForm.valid) {\n            this.validateCredentials();\n        }\n        else {\n            // this.toastService.emitToast(\"Error\", \"Inconsistency in fields\", \"error\", true);\n        }\n    }\n    get getEmail() {\n        return this.authForm.value.email ?? '';\n    }\n    validateCredentials() {\n        // this.loaderService.show(true);\n        of(this._useCase.execute(this.authForm.getRawValue())).pipe(switchMap(() => this.auth$), tap(response => {\n            if (response?.token) {\n                localStorage.setItem('email', this.getEmail);\n                return true;\n            }\n            else {\n                return false;\n            }\n        })).subscribe();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthUserComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.1.3\", type: AuthUserComponent, isStandalone: true, selector: \"lib-auth-user\", ngImport: i0, template: \"<lib-auth [authForm]=\\\"authForm\\\" (submit)=\\\"validateCredentials()\\\"></lib-auth>\\n{{auth$ | async | json}}\", dependencies: [{ kind: \"component\", type: AuthComponent, selector: \"lib-auth\", inputs: [\"authForm\"], outputs: [\"submit\"] }, { kind: \"pipe\", type: AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: JsonPipe, name: \"json\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: AuthUserComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-auth-user', imports: [AuthComponent, AsyncPipe, JsonPipe], template: \"<lib-auth [authForm]=\\\"authForm\\\" (submit)=\\\"validateCredentials()\\\"></lib-auth>\\n{{auth$ | async | json}}\" }]\n        }] });\n\nconst usersRoutes = [\n    {\n        path: 'login',\n        component: AuthUserComponent\n    }\n];\n\n/*\n * Public API Surface of users\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { usersRoutes };\n//# sourceMappingURL=users.mjs.map\n","map":null,"preliminaryFileName":"users.mjs","sourcemapFileName":"users.mjs.map"},{"fileName":"users.mjs.map","names":[],"needsCodeReference":false,"originalFileName":null,"originalFileNames":[],"source":"{\"version\":3,\"file\":\"users.mjs\",\"sources\":[\"../../../projects/users/src/domain/state/state.factory.ts\",\"../../../projects/users/src/domain/state/users.state.ts\",\"../../../projects/users/src/domain/state/index.ts\",\"../../../projects/users/src/infrastructure/services/auth-user.service.ts\",\"../../../projects/users/src/application/auth-user.usecase.ts\",\"../../../projects/users/src/infrastructure/ui/forms/auth/auth.component.ts\",\"../../../projects/users/src/infrastructure/ui/forms/auth/auth.component.html\",\"../../../projects/users/src/infrastructure/ui/containers/auth-user/auth-user.component.ts\",\"../../../projects/users/src/infrastructure/ui/containers/auth-user/auth-user.component.html\",\"../../../projects/users/src/infrastructure/ui/routes/users.routes.ts\",\"../../../projects/users/src/public-api.ts\",\"../../../projects/users/src/users.ts\"],\"sourcesContent\":[\"import { Injectable } from \\\"@angular/core\\\";\\nimport { BehaviorSubject } from \\\"rxjs\\\";\\nimport { IState } from \\\"../model/state.model\\\";\\n\\n@Injectable({\\n  providedIn: 'root'\\n})\\nexport class StateFactory {\\n  state<T>(subject$: BehaviorSubject<T>): IState<T> {\\n    return {\\n      $: () => subject$.asObservable(),\\n      snapshot: () => this.immutabilize(subject$.getValue()),\\n      set: (value: T) => subject$.next(this.immutabilize(value))\\n    }\\n  }\\n\\n  private immutabilize<T>(value: T): T {\\n    return JSON.parse(JSON.stringify(value));\\n  }\\n}\",\"import { inject, Injectable } from \\\"@angular/core\\\";\\nimport { StateFactory } from \\\"./state.factory\\\";\\nimport { BehaviorSubject } from \\\"rxjs\\\";\\nimport { IUserResponse } from \\\"../model/user-response.model\\\";\\nimport { IAuthResponse } from \\\"../model/auth-response.model\\\";\\n\\n@Injectable({\\n  providedIn: 'root'\\n})\\nexport class UsersState {\\n  private readonly _factory = inject(StateFactory);\\n\\n  //#region Subjects\\n  private readonly user$ = new BehaviorSubject<IUserResponse>(null);\\n  private readonly auth$ = new BehaviorSubject<IAuthResponse>(null);\\n  //#endregion\\n\\n  store() {\\n    return {\\n      user: this._factory.state(this.user$),\\n      auth: this._factory.state(this.auth$)\\n    }\\n  }\\n}\",\"import { inject, Injectable } from \\\"@angular/core\\\";\\nimport { UsersState } from \\\"./users.state\\\";\\n\\n@Injectable({\\n  providedIn: 'root'\\n})\\nexport class State {\\n  private readonly _users = inject(UsersState);\\n\\n  get users() {\\n    return this._users.store();\\n  }\\n}\",\"import { inject, Injectable } from '@angular/core';\\nimport { Observable } from 'rxjs';\\nimport { IAuthResponse } from '../../domain/model/auth-response.model';\\nimport { IAuthRequest } from '../../domain/model/auth-request.model';\\nimport { HttpClient } from '@angular/common/http';\\n\\n@Injectable({\\n  providedIn: 'root'\\n})\\nexport class AuthUserService {\\n  private http = inject(HttpClient);\\n  private urlBase = 'http://localhost:8080/api';\\n\\n  authUser(auth: IAuthRequest):Observable<IAuthResponse> {\\n    return this.http.post<IAuthResponse>(`${this.urlBase}/auth/login`, auth);\\n  }\\n\\n}\",\"import { inject, Injectable } from \\\"@angular/core\\\";\\nimport { Subscription, Observable, tap, filter } from \\\"rxjs\\\";\\nimport { State } from \\\"../domain/state\\\";\\nimport { IAuthResponse } from \\\"../domain/model/auth-response.model\\\";\\nimport { AuthUserService } from \\\"../infrastructure/services/auth-user.service\\\";\\nimport { IAuthRequest } from \\\"../domain/model/auth-request.model\\\";\\n\\n@Injectable({\\n    providedIn: 'root'\\n})\\nexport class AuthUserUseCase {\\n    private readonly _service = inject(AuthUserService);\\n    private readonly _state = inject(State);\\n    private subscriptions: Subscription;\\n  \\n    //#region Observables\\n    authUser$(): Observable<IAuthResponse> {\\n      return this._state.users.auth.$();\\n    }\\n    //#endregion\\n  \\n    //#region Public Methods\\n    initSubscriptions(): void {\\n      this.subscriptions = new Subscription();\\n    }\\n  \\n    destroySubscriptions(): void {\\n      this.subscriptions.unsubscribe();\\n    }\\n  \\n    execute(user: IAuthRequest): void {\\n      this.subscriptions.add(\\n        this._service.authUser(user)\\n          .pipe(\\n            tap(result => {\\n                if (result!.token) {\\n                    this._state.users.auth.set(result);\\n\\n                    // const users = this._state.users.user.snapshot();\\n                    // this._state.users.user.set([...users, result])\\n                }\\n            })\\n          )\\n          .subscribe()\\n      );\\n    }\\n\\n}\",\"import { Component, input, output } from '@angular/core';\\nimport {  FormControl, FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\\n\\n@Component({\\n  selector: 'lib-auth',\\n  imports: [FormsModule, ReactiveFormsModule],\\n  templateUrl: './auth.component.html',\\n  styleUrl: './auth.component.scss'\\n})\\nexport class AuthComponent {\\n  authForm = input<FormGroup>();\\n  submit = output<FormGroup>();\\n\\n  onSubmit() {\\n    this.authForm().markAllAsTouched();\\n    if(this.authForm().valid){\\n      this.submit.emit(this.authForm());\\n\\n    } else {\\n      console.log('error');      \\n      // this.toastService.emitToast(\\\"Error\\\", \\\"Inconsistency in fields\\\", \\\"error\\\", true);\\n    }\\n  }\\n\\n}\",\"<section class=\\\"login-container\\\">\\n    <form action=\\\"\\\" [formGroup]=\\\"authForm()\\\" class=\\\"login-container__form\\\">\\n        <ul class=\\\"login-container__nav\\\">\\n            <li class=\\\"login-container__nav__item login-container__nav__item--active\\\">\\n                <a href=\\\"#\\\" tabindex=\\\"-1\\\">Sign In</a>\\n            </li>\\n        </ul>\\n        <label for=\\\"login-input-user\\\" class=\\\"login-container__form__label\\\" aria-label=\\\"\\\">\\n            Username\\n        </label>\\n        <input id=\\\"login-input-user\\\" formControlName=\\\"email\\\" name=\\\"email\\\" class=\\\"login-container__form__input\\\"\\n            type=\\\"text\\\" />\\n        <label for=\\\"login-input-password\\\" class=\\\"login-container__form__label\\\">\\n            Password\\n        </label>\\n        <input id=\\\"login-input-password\\\" formControlName=\\\"password\\\" name=\\\"password\\\" class=\\\"login-container__form__input\\\"\\n            type=\\\"password\\\" />\\n        <label for=\\\"login-sign-up\\\" class=\\\"login-container__form__label--checkbox\\\">\\n            <input id=\\\"login-sign-up\\\" type=\\\"checkbox\\\" class=\\\"login-container__form__input--checkbox\\\" />\\n            Keep me Signed in\\n        </label>\\n        <button class=\\\"login-container__form__submit\\\" (click)=\\\"onSubmit()\\\">Sign in</button>\\n    </form>\\n    <a href=\\\"#\\\" class=\\\"login-container__copyright\\\">© 2025 BankinApp</a>\\n</section>\",\"import { Component, inject, OnDestroy, OnInit } from '@angular/core';\\nimport { FormBuilder, Validators } from '@angular/forms';\\nimport { Router } from '@angular/router';\\nimport { Observable, of, switchMap, tap } from 'rxjs';\\nimport { AuthUserUseCase } from '../../../../application/auth-user.usecase';\\nimport { IAuthResponse } from '../../../../domain/model/auth-response.model';\\nimport { AuthComponent } from \\\"../../forms/auth/auth.component\\\";\\nimport { AsyncPipe, JsonPipe } from '@angular/common';\\n\\n@Component({\\n  selector: 'lib-auth-user',\\n  imports: [AuthComponent, AsyncPipe, JsonPipe ],\\n  templateUrl: './auth-user.component.html'\\n})\\nexport class AuthUserComponent implements OnInit, OnDestroy {\\n  private readonly _useCase = inject(AuthUserUseCase);\\n  public auth$: Observable<IAuthResponse>;\\n  private router = inject(Router);\\n  private fb = inject(FormBuilder);\\n\\n  authForm = this.fb.group({\\n    email: ['', [Validators.required, Validators.email]],\\n    password: ['', [Validators.required]]\\n  });\\n\\n  ngOnInit(): void {\\n    this._useCase.initSubscriptions();\\n    this.auth$ = this._useCase.authUser$();\\n  }\\n\\n  ngOnDestroy(): void {\\n    this._useCase.destroySubscriptions();\\n  }\\n\\n  auth() {\\n    this.authForm.markAllAsTouched();\\n    if (this.authForm.valid) {\\n      this.validateCredentials();\\n    } else {\\n      // this.toastService.emitToast(\\\"Error\\\", \\\"Inconsistency in fields\\\", \\\"error\\\", true);\\n    }\\n  }\\n\\n  get getEmail(): string {\\n    return this.authForm.value.email ?? '';\\n  }\\n\\n  validateCredentials() {\\n    // this.loaderService.show(true);\\n    of(this._useCase.execute(this.authForm.getRawValue())).pipe(\\n      switchMap(() => this.auth$),\\n      tap(response => {\\n        if (response?.token) {\\n          localStorage.setItem('email', this.getEmail);\\n          return true;\\n        } else {\\n          return false;\\n        }\\n      })\\n    ).subscribe();\\n  }\\n}\\n\",\"<lib-auth [authForm]=\\\"authForm\\\" (submit)=\\\"validateCredentials()\\\"></lib-auth>\\n{{auth$ | async | json}}\",\"import { AuthUserComponent } from \\\"../containers/auth-user/auth-user.component\\\";\\n\\nexport const usersRoutes = [\\n    {\\n        path: 'login',\\n        component: AuthUserComponent\\n    }\\n];\",\"/*\\n * Public API Surface of users\\n */\\n\\nexport * from './infrastructure/ui/routes/users.routes';\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[],\"mappings\":\"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\"}","type":"asset"}]}